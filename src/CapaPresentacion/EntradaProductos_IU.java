/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package CapaPresentacion;

import CapaDatos.EntradaProducto;
import CapaDatos.Kardex;
import CapaDatos.Medida;
import CapaNegocio.EntradaProductoBD;
import CapaNegocio.KardexBD;
import CapaNegocio.MedidaBD;
import CapaNegocio.ProductoBD;
import java.text.DecimalFormat;
import java.text.DecimalFormatSymbols;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.List;
import java.util.Locale;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author ROSELITA
 */
public class EntradaProductos_IU extends javax.swing.JInternalFrame {

    List<Medida> lista_medida;

    /**
     * Creates new form EntradaProductos_IU
     */
    public EntradaProductos_IU() {
        initComponents();

        sacarHora();
        cargarMedida();
        sacarFecha();

    }

    private void cargarMedida() {

        try {
            cmbMedida.removeAllItems();

            MedidaBD oMedidaBD = new MedidaBD();
            DefaultTableModel tabla_temporal;
            tabla_temporal = oMedidaBD.reportarMedida();

            lista_medida = new ArrayList<>();
            cmbMedida.addItem("Seleccionar");

            for (int i = 0; i < tabla_temporal.getRowCount(); i++) {

                int codigo = Integer.valueOf(tabla_temporal.getValueAt(i, 0).toString());
                String presentacion = String.valueOf(tabla_temporal.getValueAt(i, 1));
                String equivalencia = String.valueOf(tabla_temporal.getValueAt(i, 2));
                lista_medida.add(new Medida(codigo, presentacion, equivalencia));
                cmbMedida.addItem(presentacion);

            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e, "Error al cargar medida", JOptionPane.ERROR_MESSAGE);
        }

    }

    private void sacarHora() {

        Calendar calendario = Calendar.getInstance();

        int hora = calendario.get(Calendar.HOUR_OF_DAY);
        int minutos = calendario.get(Calendar.MINUTE);
        int segundos = calendario.get(Calendar.SECOND);

        int nueva_hora = hora;

        String tiempo = nueva_hora + ":" + minutos + ":" + segundos;

        txtHora.setText(tiempo);

    }

    private void sacarFecha() {

        Calendar calendario = Calendar.getInstance();

        int dia = calendario.get(Calendar.DAY_OF_MONTH);
        int mes = calendario.get(Calendar.MONTH) + 1;
        int anio = calendario.get(Calendar.YEAR);

        String fecha = anio + "-" + mes + "-" + dia;

        txtFecha.setText(fecha);

    }

    private void exito(String mensaje) {
        JOptionPane.showConfirmDialog(this, mensaje, "MENSAJE", JOptionPane.DEFAULT_OPTION, JOptionPane.INFORMATION_MESSAGE);
    }

    private void error(String mensaje) {
        JOptionPane.showConfirmDialog(this, mensaje, "ERROR", JOptionPane.DEFAULT_OPTION, JOptionPane.ERROR_MESSAGE);

    }

    private void advertencia(String mensaje) {
        JOptionPane.showConfirmDialog(this, mensaje, "ADVERTENCIA", JOptionPane.DEFAULT_OPTION, JOptionPane.WARNING_MESSAGE);

    }

    private void limpiar_tabla_formulario() {

        DefaultTableModel tabla_entrada_productos_temporal = (DefaultTableModel) tabla_entrada_productos.getModel();
        tabla_entrada_productos_temporal.setRowCount(0);

    }

    public void limpiar_caja_precios() {

        txtCantidadPresentacion.setText("");
        txtCantidadEquivalencia.setText("");
        txtmargenGananciaPresentacion.setText("0");
        txtMargenGananciaEquivalencia.setText("0");
        txtPrecioCompraPresentacion.setText("");
        txtPrecioCompraUnidades.setText("");
        txtPrecioVentaPresentacion.setText("");
        txtPrecioVentaUnidades.setText("");

    }

    public void limpiar_producto() {

        txtBarras.setText("");
        txtProducto.setText("");
        txtLote.setText("");
        txtEquivalencia.setText("");
        dcFechaVcto.setDate(null);
        cargarMedida();

    }

    public void limpiar_entrada() {

        txtNroDocumento.setText("");

        cargarMedida();
        limpiar_tabla_formulario();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        cmbTipoDocumento = new javax.swing.JComboBox<>();
        txtNroDocumento = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        cmbProceso = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtHora = new javax.swing.JTextField();
        txtFecha = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        cmbTienda = new javax.swing.JComboBox<>();
        jPanel1 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        txtBarras = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        txtProducto = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        dcFechaVcto = new com.toedter.calendar.JDateChooser();
        jLabel10 = new javax.swing.JLabel();
        txtLote = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        cmbMedida = new javax.swing.JComboBox<>();
        jLabel12 = new javax.swing.JLabel();
        txtCantidadPresentacion = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        txtEquivalencia = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        txtCantidadEquivalencia = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        txtPrecioCompraPresentacion = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        txtPrecioCompraUnidades = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        txtmargenGananciaPresentacion = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        txtMargenGananciaEquivalencia = new javax.swing.JTextField();
        jLabel19 = new javax.swing.JLabel();
        txtPrecioVentaPresentacion = new javax.swing.JTextField();
        jLabel20 = new javax.swing.JLabel();
        txtPrecioVentaUnidades = new javax.swing.JTextField();
        btnAgregar = new javax.swing.JButton();
        btnQuitar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabla_entrada_productos = new javax.swing.JTable();
        btnRegistrar = new javax.swing.JButton();
        btnCerrar = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("ENTRADA DE PRODUCTOS");

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 10)); // NOI18N
        jLabel1.setText("TIPO DOCUMENTO");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 10)); // NOI18N
        jLabel2.setText("NRO DOCUMENTO");

        cmbTipoDocumento.setFont(new java.awt.Font("Segoe UI", 0, 10)); // NOI18N
        cmbTipoDocumento.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "FACTURA", "BOLETA" }));

        txtNroDocumento.setFont(new java.awt.Font("Segoe UI", 0, 10)); // NOI18N

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 10)); // NOI18N
        jLabel3.setText("PROCESO");

        cmbProceso.setFont(new java.awt.Font("Segoe UI", 0, 10)); // NOI18N
        cmbProceso.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "COMPRA" }));

        jLabel4.setFont(new java.awt.Font("Segoe UI", 0, 10)); // NOI18N
        jLabel4.setText("HORA");

        jLabel5.setFont(new java.awt.Font("Segoe UI", 0, 10)); // NOI18N
        jLabel5.setText("FECHA");

        txtHora.setFont(new java.awt.Font("Segoe UI", 0, 10)); // NOI18N
        txtHora.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtHoraActionPerformed(evt);
            }
        });

        txtFecha.setFont(new java.awt.Font("Segoe UI", 0, 10)); // NOI18N

        jLabel6.setFont(new java.awt.Font("Segoe UI", 0, 10)); // NOI18N
        jLabel6.setText("TIENDA");

        cmbTienda.setFont(new java.awt.Font("Segoe UI", 0, 10)); // NOI18N
        cmbTienda.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "PRINCIPAL" }));

        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));

        jLabel7.setFont(new java.awt.Font("Segoe UI", 0, 10)); // NOI18N
        jLabel7.setText("BARRAS");

        txtBarras.setFont(new java.awt.Font("Segoe UI", 0, 10)); // NOI18N
        txtBarras.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtBarrasActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Segoe UI", 0, 10)); // NOI18N
        jLabel8.setText("PRODUCTO");

        txtProducto.setFont(new java.awt.Font("Segoe UI", 0, 10)); // NOI18N
        txtProducto.setEnabled(false);

        jLabel9.setFont(new java.awt.Font("Segoe UI", 0, 10)); // NOI18N
        jLabel9.setText("FECHA VCTO");

        jLabel10.setFont(new java.awt.Font("Segoe UI", 0, 10)); // NOI18N
        jLabel10.setText("LOTE");

        txtLote.setFont(new java.awt.Font("Segoe UI", 0, 10)); // NOI18N

        jLabel11.setFont(new java.awt.Font("Segoe UI", 0, 10)); // NOI18N
        jLabel11.setText("PRESENTACION");

        cmbMedida.setFont(new java.awt.Font("Segoe UI", 0, 10)); // NOI18N
        cmbMedida.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cmbMedida.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbMedidaItemStateChanged(evt);
            }
        });
        cmbMedida.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbMedidaActionPerformed(evt);
            }
        });

        jLabel12.setFont(new java.awt.Font("Segoe UI", 0, 10)); // NOI18N
        jLabel12.setText("CANT. PRES");

        txtCantidadPresentacion.setFont(new java.awt.Font("Segoe UI", 0, 10)); // NOI18N

        jLabel13.setFont(new java.awt.Font("Segoe UI", 0, 10)); // NOI18N
        jLabel13.setText("EQUIVALENCIA");

        txtEquivalencia.setFont(new java.awt.Font("Segoe UI", 0, 10)); // NOI18N

        jLabel14.setFont(new java.awt.Font("Segoe UI", 0, 10)); // NOI18N
        jLabel14.setText("CANT. EQV");

        txtCantidadEquivalencia.setFont(new java.awt.Font("Segoe UI", 0, 10)); // NOI18N

        jLabel15.setFont(new java.awt.Font("Segoe UI", 0, 10)); // NOI18N
        jLabel15.setText("PCP");

        txtPrecioCompraPresentacion.setFont(new java.awt.Font("Segoe UI", 0, 10)); // NOI18N
        txtPrecioCompraPresentacion.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtPrecioCompraPresentacionKeyReleased(evt);
            }
        });

        jLabel16.setFont(new java.awt.Font("Segoe UI", 0, 10)); // NOI18N
        jLabel16.setText("PCU");

        txtPrecioCompraUnidades.setFont(new java.awt.Font("Segoe UI", 0, 10)); // NOI18N
        txtPrecioCompraUnidades.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPrecioCompraUnidadesActionPerformed(evt);
            }
        });

        jLabel17.setFont(new java.awt.Font("Segoe UI", 0, 10)); // NOI18N
        jLabel17.setText("MARGEN G. PRES.");

        txtmargenGananciaPresentacion.setFont(new java.awt.Font("Segoe UI", 0, 10)); // NOI18N
        txtmargenGananciaPresentacion.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtmargenGananciaPresentacionKeyReleased(evt);
            }
        });

        jLabel18.setFont(new java.awt.Font("Segoe UI", 0, 10)); // NOI18N
        jLabel18.setText("MARGEN G. EQUI");

        txtMargenGananciaEquivalencia.setFont(new java.awt.Font("Segoe UI", 0, 10)); // NOI18N
        txtMargenGananciaEquivalencia.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtMargenGananciaEquivalenciaKeyReleased(evt);
            }
        });

        jLabel19.setFont(new java.awt.Font("Segoe UI", 0, 10)); // NOI18N
        jLabel19.setText("PVP");

        txtPrecioVentaPresentacion.setFont(new java.awt.Font("Segoe UI", 0, 10)); // NOI18N
        txtPrecioVentaPresentacion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPrecioVentaPresentacionActionPerformed(evt);
            }
        });

        jLabel20.setFont(new java.awt.Font("Segoe UI", 0, 10)); // NOI18N
        jLabel20.setText("PVU");

        txtPrecioVentaUnidades.setFont(new java.awt.Font("Segoe UI", 0, 10)); // NOI18N

        btnAgregar.setFont(new java.awt.Font("Segoe UI", 0, 10)); // NOI18N
        btnAgregar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/CapaPresentacion/Images/agregar1.png"))); // NOI18N
        btnAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarActionPerformed(evt);
            }
        });

        btnQuitar.setFont(new java.awt.Font("Segoe UI", 0, 10)); // NOI18N
        btnQuitar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/CapaPresentacion/Images/menos.png"))); // NOI18N
        btnQuitar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnQuitarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cmbMedida, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel11))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtCantidadPresentacion, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel12))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel13)
                            .addComponent(txtEquivalencia, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(6, 6, 6)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtCantidadEquivalencia, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel15)
                            .addComponent(txtPrecioCompraPresentacion, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(6, 6, 6)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtPrecioCompraUnidades, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel16))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtmargenGananciaPresentacion, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel17))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(txtMargenGananciaEquivalencia, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtPrecioVentaPresentacion, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel19)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel20)
                            .addComponent(txtPrecioVentaUnidades, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnAgregar, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnQuitar, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtBarras, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtProducto, javax.swing.GroupLayout.PREFERRED_SIZE, 447, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(dcFechaVcto, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel10)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtLote, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtLote, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel10))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(txtBarras, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8)
                            .addComponent(txtProducto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9)))
                    .addComponent(dcFechaVcto, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel12)
                    .addComponent(jLabel13)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel11)
                        .addComponent(jLabel15)
                        .addComponent(jLabel14))
                    .addComponent(jLabel16)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel17)
                        .addComponent(jLabel18)
                        .addComponent(jLabel19)
                        .addComponent(jLabel20)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(btnAgregar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtmargenGananciaPresentacion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cmbMedida, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtCantidadPresentacion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtEquivalencia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtCantidadEquivalencia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtPrecioCompraPresentacion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtPrecioCompraUnidades, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtPrecioVentaUnidades, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtPrecioVentaPresentacion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtMargenGananciaEquivalencia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(btnQuitar, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap(12, Short.MAX_VALUE))
        );

        tabla_entrada_productos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "SERIE", "PRODUCTO", "LOTE", "FECHAVCTO", "SP", "SEQV", "PCPRES", "PCEQV", "IMPORTE", "MARGEN_PRESENTACION", "MARGEN_EQUIVALENCIA", "PVPRESMayor", "PVEQVMayor", "PRESENTACION", "EQUIVALENCIA", "REF", "PVPMenor", "PVEQVMenor"
            }
        ));
        jScrollPane1.setViewportView(tabla_entrada_productos);

        btnRegistrar.setFont(new java.awt.Font("Segoe UI", 0, 10)); // NOI18N
        btnRegistrar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/CapaPresentacion/Images/disk.png"))); // NOI18N
        btnRegistrar.setText("REGISTRAR");
        btnRegistrar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnRegistrar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnRegistrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegistrarActionPerformed(evt);
            }
        });

        btnCerrar.setFont(new java.awt.Font("Segoe UI", 0, 10)); // NOI18N
        btnCerrar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/CapaPresentacion/Images/cross.png"))); // NOI18N
        btnCerrar.setText("CERRAR");
        btnCerrar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnCerrar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(cmbTipoDocumento, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cmbProceso, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(txtNroDocumento, javax.swing.GroupLayout.PREFERRED_SIZE, 489, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtFecha, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtHora, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cmbTienda, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(btnRegistrar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnCerrar))
                    .addComponent(jScrollPane1)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(cmbTipoDocumento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(cmbProceso, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(txtHora, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel2)
                        .addComponent(txtNroDocumento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel5)
                        .addComponent(txtFecha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(cmbTienda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnCerrar, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnRegistrar))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtHoraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtHoraActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtHoraActionPerformed

    private void cmbMedidaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbMedidaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbMedidaActionPerformed

    private void btnRegistrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegistrarActionPerformed
        // TODO add your handling code here:

        int cant_productos = tabla_entrada_productos.getRowCount();
        if (cant_productos > 0) {
            if (txtNroDocumento.getText().length() > 0) {
                EntradaProducto oEntradaProducto = new EntradaProducto();
                EntradaProductoBD oEntradaProductoBD = new EntradaProductoBD();
                Kardex oKardex = new Kardex();
                KardexBD oKardexBD = new KardexBD();

                String tipo_documento = cmbTipoDocumento.getSelectedItem().toString();
                String proceso = cmbProceso.getSelectedItem().toString();
                String hora = txtHora.getText().trim();
                String fecha = txtFecha.getText().trim();
                String nroDocumento = txtNroDocumento.getText().trim().toUpperCase();
                String tienda = cmbTienda.getSelectedItem().toString();
                DefaultTableModel tabla_temporal_entradas = (DefaultTableModel) tabla_entrada_productos.getModel();
                for (int i = 0; i < cant_productos; i++) {

                    String serie = tabla_temporal_entradas.getValueAt(i, 0).toString();
                    String producto = tabla_temporal_entradas.getValueAt(i, 1).toString();
                    String lote = tabla_temporal_entradas.getValueAt(i, 2).toString();
                    String fecha_vcto = tabla_temporal_entradas.getValueAt(i, 3).toString();
                    int stock_presentacion = Integer.parseInt(tabla_temporal_entradas.getValueAt(i, 4).toString());
                    int stock_equivalencia = Integer.parseInt(tabla_temporal_entradas.getValueAt(i, 5).toString());
                    double precio_compra_presentacion = Double.parseDouble(tabla_temporal_entradas.getValueAt(i, 6).toString());
                    double precio_compra_equivalencia = Double.parseDouble(tabla_temporal_entradas.getValueAt(i, 7).toString());
                    double importe = Double.parseDouble(tabla_temporal_entradas.getValueAt(i, 8).toString());
                    int margenPresentacion = Integer.parseInt(tabla_temporal_entradas.getValueAt(i, 9).toString());
                    int margenEquivalencia = Integer.parseInt(tabla_temporal_entradas.getValueAt(i, 10).toString());
                    double precio_venta_presentacion_mayor = Double.parseDouble(tabla_temporal_entradas.getValueAt(i, 11).toString());
                    double precio_venta_presentacion_menor = Double.parseDouble(tabla_temporal_entradas.getValueAt(i, 16).toString());
                    double precio_venta_equivalencia_mayor = Double.parseDouble(tabla_temporal_entradas.getValueAt(i, 12).toString());
                    double precio_venta_equivalencia_menor = Double.parseDouble(tabla_temporal_entradas.getValueAt(i, 17).toString());
                    String presentacion = tabla_temporal_entradas.getValueAt(i, 13).toString();
                    String equivalencia = tabla_temporal_entradas.getValueAt(i, 14).toString();
                    int cantRef = Integer.parseInt(tabla_temporal_entradas.getValueAt(i, 15).toString());

                    oEntradaProducto.setpSerie(serie);
                    oEntradaProducto.setLote(lote);
                    oEntradaProducto.setPresentacion(presentacion);
                    oEntradaProducto.setEquivalencia(equivalencia);
                    oEntradaProducto.setFechaVcto(fecha_vcto);
                    oEntradaProducto.setStockPresentacion(precio_compra_presentacion);
                    oEntradaProducto.setStockEquivalencia(stock_equivalencia);
                    oEntradaProducto.setPrecioCompraPresentacion(precio_compra_presentacion);
                    oEntradaProducto.setPrecioCompraEquivalencia(precio_compra_equivalencia);
                    oEntradaProducto.setMargenGananciaPresentacion(margenPresentacion);
                    oEntradaProducto.setMargenGananciaEquivalencia(margenEquivalencia);
                    oEntradaProducto.setPrecioVentaPresentacionMayor(precio_venta_presentacion_mayor);
                    oEntradaProducto.setPrecioVentaPresentacionMenor(precio_venta_presentacion_menor);
                    oEntradaProducto.setPrecioVentaEquivalenciaMayor(precio_venta_equivalencia_mayor);
                    oEntradaProducto.setPrecioVentaEquivalenciaMenor(precio_venta_equivalencia_menor);
                    oEntradaProducto.setRef(cantRef);
                    oEntradaProducto.setTienda(tienda);

                    oKardex.setFecha(fecha);
                    oKardex.setHora(hora);
                    oKardex.setTipoOperacion("ENTRADA");
                    oKardex.setkDescripcion(proceso + " " + producto + " - " + tipo_documento + " : " + nroDocumento);
                    oKardex.setpSerie(serie);
                    oKardex.setLote(lote);

                    int stock_medida;
                    double precio_medida;
                    String medida;

                    if (presentacion.equals(equivalencia)) {
                        stock_medida = stock_equivalencia;
                        precio_medida = precio_compra_equivalencia;
                        medida = equivalencia;

                    } else {
                        stock_medida = stock_presentacion;
                        precio_medida = precio_compra_presentacion;
                        medida = presentacion;
                    }

                    oKardex.setPresentacion(medida);
                    oKardex.setkCantidad(stock_medida);
                    oKardex.setkPrecio(precio_medida);
                    oKardex.setkImporte(importe);
                    oKardex.setTienda(tienda);

                    oEntradaProductoBD.registrarEntradaProducto(oEntradaProducto);
                    oKardexBD.registrarKardex(oKardex);

                }

                exito("Se registraron los productos con exito");
                limpiar_caja_precios();
                limpiar_producto();
                limpiar_entrada();
                limpiar_tabla_formulario();

            } else {
                advertencia("Ingrese el nro de documento");
                txtNroDocumento.requestFocus();
            }
        } else {
            advertencia("No hay productos a guardar");
            txtBarras.requestFocus();
        }


    }//GEN-LAST:event_btnRegistrarActionPerformed

    private void txtBarrasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtBarrasActionPerformed
        // TODO add your handling code here:

        if (txtBarras.getText().length() > 0) {

            DefaultTableModel tabla_temporal;
            ProductoBD oProductoBD = new ProductoBD();
            tabla_temporal = oProductoBD.buscarProducto(txtBarras.getText().trim());

            if (tabla_temporal.getRowCount() > 0) {
                txtProducto.setText(tabla_temporal.getValueAt(0, 1).toString());

            } else {

                error("No se encontro el producto con ese codigo de barras...");
                txtBarras.requestFocus();
                txtProducto.setText("");

            }

        } else {
            advertencia("Ingrese un codigo de barras...");
        }


    }//GEN-LAST:event_txtBarrasActionPerformed

    private void cmbMedidaItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbMedidaItemStateChanged
        // TODO add your handling code here:

        if (evt.getStateChange() == evt.SELECTED) {
            String textoSeleccionado = cmbMedida.getSelectedItem().toString();
            if (textoSeleccionado.equals("Seleccionar")) {
                txtEquivalencia.setText("");
                txtCantidadEquivalencia.setEnabled(false);
                txtPrecioCompraPresentacion.setEnabled(false);
                txtPrecioCompraUnidades.setEnabled(false);
                txtCantidadPresentacion.setEnabled(false);
                limpiar_caja_precios();

            } else {
                int i = cmbMedida.getSelectedIndex() - 1;
                txtEquivalencia.setText("" + lista_medida.get(i).getPreEquivalencia());
                String presentacion = cmbMedida.getSelectedItem().toString();
                String equivalencia = txtEquivalencia.getText();
                if (presentacion.equals(equivalencia)) {
                    txtCantidadPresentacion.setEnabled(false);
                    txtPrecioCompraPresentacion.setEnabled(false);
                    txtPrecioCompraUnidades.setEnabled(true);
                    txtCantidadEquivalencia.setEnabled(true);
                    txtmargenGananciaPresentacion.setEnabled(false);

                    txtCantidadEquivalencia.requestFocus();
                    limpiar_caja_precios();

                } else {

                    txtCantidadPresentacion.setEnabled(true);
                    txtPrecioCompraPresentacion.setEnabled(true);
                    txtPrecioCompraUnidades.setEnabled(false);
                    txtCantidadEquivalencia.setEnabled(true);
                    txtmargenGananciaPresentacion.setEnabled(true);
                    txtCantidadPresentacion.requestFocus();
                    limpiar_caja_precios();

                }

            }

        }


    }//GEN-LAST:event_cmbMedidaItemStateChanged

    private void txtPrecioCompraPresentacionKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPrecioCompraPresentacionKeyReleased
        // TODO add your handling code here:

        try {
            if (txtCantidadEquivalencia.getText().length() > 0) {

                int cant_equivalencia = Integer.parseInt(txtCantidadEquivalencia.getText().trim());
                double precio_compra = Double.parseDouble(txtPrecioCompraPresentacion.getText().trim());
                DecimalFormatSymbols symbols = new DecimalFormatSymbols(Locale.ENGLISH);
                DecimalFormat df = new DecimalFormat("#.##", symbols);

                double precio_compra_unidades = precio_compra / cant_equivalencia;

                txtPrecioCompraUnidades.setText("" + df.format(precio_compra_unidades));

            }
        } catch (Exception e) {
        }


    }//GEN-LAST:event_txtPrecioCompraPresentacionKeyReleased

    private void txtmargenGananciaPresentacionKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtmargenGananciaPresentacionKeyReleased
        // TODO add your handling code here:7

        try {
            DecimalFormatSymbols symbols = new DecimalFormatSymbols(Locale.ENGLISH);
            DecimalFormat df = new DecimalFormat("#.#", symbols);

            double precio_compra_presentacion = Double.parseDouble(txtPrecioCompraPresentacion.getText().trim());
            double margen = Integer.parseInt(txtmargenGananciaPresentacion.getText().trim());

            double ganancia_presentacion = precio_compra_presentacion * (margen / 100);

            double precio_venta_presentacion = precio_compra_presentacion + ganancia_presentacion;

            double redondeado_presentacion = Math.round(precio_venta_presentacion);

            txtPrecioVentaPresentacion.setText("" + df.format(redondeado_presentacion));

        } catch (Exception e) {
        }


    }//GEN-LAST:event_txtmargenGananciaPresentacionKeyReleased

    private void txtMargenGananciaEquivalenciaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtMargenGananciaEquivalenciaKeyReleased
        // TODO add your handling code here:

        try {
            DecimalFormatSymbols symbols = new DecimalFormatSymbols(Locale.ENGLISH);
            DecimalFormat df = new DecimalFormat("#.#", symbols);

            double precio_compra_equivalencia = Double.parseDouble(txtPrecioCompraUnidades.getText().trim());
            double margen = Integer.parseInt(txtMargenGananciaEquivalencia.getText().trim());

            double ganancia_equivalencia = precio_compra_equivalencia * (margen / 100);

            double precio_venta_equivalencia = precio_compra_equivalencia + ganancia_equivalencia;

            String redondeado_equivalencia = df.format(precio_venta_equivalencia);

            txtPrecioVentaUnidades.setText(redondeado_equivalencia);

        } catch (Exception e) {
        }


    }//GEN-LAST:event_txtMargenGananciaEquivalenciaKeyReleased

    private void btnAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarActionPerformed
        // TODO add your handling code here:

        if (txtProducto.getText().length() > 0) {
            if (cmbMedida.getSelectedIndex() != 0) {
                if (txtmargenGananciaPresentacion.getText().length() > 0) {

                    String presentacion = cmbMedida.getSelectedItem().toString();
                    String equivalencia = txtEquivalencia.getText();
                    String serie = txtBarras.getText();
                    String producto = txtProducto.getText();
                    String lote = txtLote.getText().toUpperCase();
                    SimpleDateFormat dcn = new SimpleDateFormat("yyyy-MM-dd");
                    String fechaVcto = dcn.format(dcFechaVcto.getDate());
                    int ref = Integer.parseInt(txtCantidadEquivalencia.getText().trim());
                    int margenPresentacion = Integer.parseInt(txtmargenGananciaPresentacion.getText().trim());
                    int margenEquivalencia = Integer.parseInt(txtMargenGananciaEquivalencia.getText().trim());

                    if (presentacion.equals(equivalencia)) {

                        int cant_quivalencia = Integer.parseInt(txtCantidadEquivalencia.getText().trim());
                        double precio_compra_unidades = Double.parseDouble(txtPrecioCompraUnidades.getText().trim());
                        double precio_venta_unidades_mayor = Double.parseDouble(txtPrecioVentaUnidades.getText().trim());
                        double importe = precio_compra_unidades * cant_quivalencia;
                        DefaultTableModel tabla_entrada_productos_temporal = (DefaultTableModel) tabla_entrada_productos.getModel();
                        int cant_presentacion = 0;
                        double precio_compra_presentacion = 0;
                        double precio_venta_presentacion_mayor = 0;
                        ref = 0;
                        double precio_venta_presentacion_menor = 0;
                        double precio_venta_unidades_menor = precio_compra_unidades + (precio_compra_unidades * 0.20);
                        Object[] data = {serie, producto, lote, fechaVcto, cant_presentacion, cant_quivalencia, precio_compra_presentacion, precio_compra_unidades, importe,
                            margenPresentacion, margenEquivalencia, precio_venta_presentacion_mayor, precio_venta_unidades_mayor, presentacion, equivalencia, ref,
                            precio_venta_presentacion_menor, precio_venta_unidades_menor};
                        tabla_entrada_productos_temporal.addRow(data);

                    } else {

                        int cant_presentacion = Integer.parseInt(txtCantidadPresentacion.getText().trim());
                        int cant_unidades = Integer.parseInt(txtCantidadEquivalencia.getText().trim());
                        int cant_quivalencia = cant_presentacion * cant_unidades;
                        double precio_compra_unidades = Double.parseDouble(txtPrecioCompraUnidades.getText().trim());
                        double precio_venta_unidades_mayor = Double.parseDouble(txtPrecioVentaUnidades.getText().trim());
                        double precio_compra_presentacion = Double.parseDouble(txtPrecioCompraPresentacion.getText().trim());
                        double precio_venta_presentacion_mayor = Double.parseDouble(txtPrecioVentaPresentacion.getText().trim());
                        double importe = precio_compra_presentacion * cant_presentacion;
                        DefaultTableModel tabla_entrada_productos_temporal = (DefaultTableModel) tabla_entrada_productos.getModel();
                        double precio_venta_presentacion_menor = precio_compra_presentacion + (precio_compra_presentacion * 0.20);
                        double precio_venta_unidades_menor = precio_compra_unidades + (precio_compra_unidades * 0.20);
                        Object[] data = {serie, producto, lote, fechaVcto, cant_presentacion, cant_quivalencia, precio_compra_presentacion, precio_compra_unidades, importe,
                            margenPresentacion, margenEquivalencia, precio_venta_presentacion_mayor, precio_venta_unidades_mayor, presentacion, equivalencia, ref,
                            precio_venta_presentacion_menor, precio_venta_unidades_menor};
                        tabla_entrada_productos_temporal.addRow(data);

                    }
                    limpiar_caja_precios();
                    limpiar_producto();
                    txtBarras.requestFocus();

                } else {
                    advertencia("Tiene que colocar un margen de ganancia");
                    txtmargenGananciaPresentacion.requestFocus();
                }

            } else {
                advertencia("Tiene que seleccionar una medida del producto");
                cmbMedida.requestFocus();
            }

        } else {
            advertencia("Tienes que buscar un producto");
            txtBarras.requestFocus();
        }


    }//GEN-LAST:event_btnAgregarActionPerformed

    private void btnQuitarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnQuitarActionPerformed
        // TODO add your handling code here:

        int filaSeleccionada = tabla_entrada_productos.getSelectedRow();

        try {
            DefaultTableModel tabla_temporal_entradas = (DefaultTableModel) tabla_entrada_productos.getModel();
            tabla_temporal_entradas.removeRow(filaSeleccionada);

            tabla_entrada_productos.setModel(tabla_temporal_entradas);

        } catch (Exception e) {
            JOptionPane.showConfirmDialog(null, "Error al quitar", "Error", JOptionPane.WARNING_MESSAGE);
        }


    }//GEN-LAST:event_btnQuitarActionPerformed

    private void txtPrecioVentaPresentacionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPrecioVentaPresentacionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPrecioVentaPresentacionActionPerformed

    private void txtPrecioCompraUnidadesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPrecioCompraUnidadesActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPrecioCompraUnidadesActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAgregar;
    private javax.swing.JButton btnCerrar;
    private javax.swing.JButton btnQuitar;
    private javax.swing.JButton btnRegistrar;
    private javax.swing.JComboBox<String> cmbMedida;
    private javax.swing.JComboBox<String> cmbProceso;
    private javax.swing.JComboBox<String> cmbTienda;
    private javax.swing.JComboBox<String> cmbTipoDocumento;
    private com.toedter.calendar.JDateChooser dcFechaVcto;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tabla_entrada_productos;
    private javax.swing.JTextField txtBarras;
    private javax.swing.JTextField txtCantidadEquivalencia;
    private javax.swing.JTextField txtCantidadPresentacion;
    private javax.swing.JTextField txtEquivalencia;
    private javax.swing.JTextField txtFecha;
    private javax.swing.JTextField txtHora;
    private javax.swing.JTextField txtLote;
    private javax.swing.JTextField txtMargenGananciaEquivalencia;
    private javax.swing.JTextField txtNroDocumento;
    private javax.swing.JTextField txtPrecioCompraPresentacion;
    private javax.swing.JTextField txtPrecioCompraUnidades;
    private javax.swing.JTextField txtPrecioVentaPresentacion;
    private javax.swing.JTextField txtPrecioVentaUnidades;
    private javax.swing.JTextField txtProducto;
    private javax.swing.JTextField txtmargenGananciaPresentacion;
    // End of variables declaration//GEN-END:variables
}
